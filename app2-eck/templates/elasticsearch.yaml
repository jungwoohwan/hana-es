{{- if .Values.elasticsearch.enabled }}
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: {{ template "eck-resource.name" . }}-elasticsearch
spec:
{{- if .Values.elasticsearch.http }}
  http:
{{ toYaml .Values.elasticsearch.http | indent 4 }}
{{- end }}
  version: {{ .Values.elasticsearch.image.tag }}
  image: {{ .Values.elasticsearch.image.repository }}:{{ .Values.elasticsearch.image.tag }}
{{- if not .Values.elasticsearch.podDisruptionBudget.enabled }}
  podDisruptionBudget: {}
{{- end }}
  nodeSets:
{{- range $name, $node := .Values.elasticsearch.nodeSets}}
  {{- if $node.enabled}}
  - name: {{ $name}}
    count: {{ $node.count }}
    config:
  {{- toYaml $node.config | nindent 6 }}
    podTemplate:
      spec:
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        containers:
        - name: elasticsearch
          resources:
            limits:
              memory: {{ $node.limitMem | quote }}
              cpu: {{ $node.limitCpu }}   
          env:
          - name: ES_JAVA_OPTS
            value: {{ $node.javaOpts | quote }}
  {{- if $node.nodeSelector }}
        nodeSelector:
    {{- toYaml $node.nodeSelector | nindent 10 }}
  {{- end }}
  {{- if $node.pvc }}
    volumeClaimTemplates:
      - metadata:
          name: elasticsearch-data
        spec:
          accessModes: [{{ $node.pvc.accessModes }}]
          resources:
            requests:
              storage: {{ $node.pvc.size }}
          storageClassName: {{ $node.pvc.storageClassName }}
  {{- end }}
  {{- end}}  
{{- end}}  
{{- end }}
